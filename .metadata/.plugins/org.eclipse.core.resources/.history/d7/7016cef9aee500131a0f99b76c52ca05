package receiver;


import java.awt.List;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.apache.http.message.BasicNameValuePair;


public class DataReceiver {
	final String URL = "http://www.test.com";
	
	CloseableHttpClient httpclient = HttpClients.createDefault();
	HttpGet httpGet = new HttpGet("http://targethost/homepage");
	CloseableHttpResponse response1 = httpclient.execute(httpGet);
	// The underlying HTTP connection is still held by the response object
	// to allow the response content to be streamed directly from the network socket.
	// In order to ensure correct deallocation of system resources
	// the user MUST either fully consume the response content  or abort request
	// execution by calling CloseableHttpResponse#close().

	try {
	    System.out.println(response1.getStatusLine());
	    HttpEntity entity1 = response1.getEntity();
	    // do something useful with the response body
	    // and ensure it is fully consumed
	    EntityUtils.consume(entity1);
	} finally {
	    response1.close();
	}

	HttpPost httpPost = new HttpPost("http://targethost/login");
	List <NameValuePair> nvps = new ArrayList <NameValuePair>();
	nvps.add(new BasicNameValuePair("username", "vip"));
	nvps.add(new BasicNameValuePair("password", "secret"));
	httpPost.setEntity(new UrlEncodedFormEntity(nvps));
	CloseableHttpResponse response2 = httpclient.execute(httpPost);

	try {
	    System.out.println(response2.getStatusLine());
	    HttpEntity entity2 = response2.getEntity();
	    // do something useful with the response body
	    // and ensure it is fully consumed
	    EntityUtils.consume(entity2);
	} finally {
	    response2.close();
	}

}
